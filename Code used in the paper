---
title: ""
author: "Ferrera Laila"
date: 13-11-22
---
#Libraries
library(Dada2) (Benjamin J Callahan et al. 2016)
library(tidyverse) (Wickham et al. 2019)
library(lme4) (Bates et al. 2015)
library(phangorn) (Schliep 2011)
library(plotly)  (Sievert 2020)
library(vegan) (Oksanen et al. 2013)
library(VennDiagram) (Chen 2022)
library(microbiome) # data analysis and visualisation  (Lahti et Shetty s. d.)
library(phyloseq) # also the basis of data object. Data analysis and visualisation (McMurdie et Holmes 2013)
library(microbiomeutilities) # some utility tools (Shetty et Lahti s. d.)
library (MetBrewer) # nice color options (Blake s. d.)
library (DT) # interactive tables in html and markdown
library(data.table) # alternative to data.frame
library(microbial)
library(NbClust)
library(ecodist)
library(mia)
library(vegan)
library(dendextend)
library(DT)
library(ggtree)
library(ape)
library(cluster)
library (rstatix)

#We started the analysis from the received the sequence table without chimera sequences

#import seqtab nochim
seqtab.nochim <- readRDS("seqtab_nochim.rds")
seqtab <- readRDS("seqtab.rds")
  
#Taxonomy assignment
taxa_a <- assignTaxonomy(seqtab.nochim, "~/Work space/My data/metagenomics_analysis-Germany/silva_nr99_v138.1_train_set.fa.gz", multithread=FALSE)
saveRDS(taxa_a, "taxa_a.rds")
 
#Add species
#dada2 assigns species using the addSpecies function
#The input for addSpecies is the output of  the taxonomic assignments, and species-level fasta sequence from database

taxa_species <- addSpecies(taxa_a, "~/Work space/My data/metagenomics_analysis-Germany/silva_species_assignment_v138.fa.gz")
saveRDS(taxa_species, "taxa_species.rds")

#Alignment package msa
#Multiple alignment
   seqs <- getSequences(seqtab.nochim)
   names(seqs) <- seqs # This propagates to the tip labels of the tree
   
#Construct multiple alignment
mult <- msa(seqs, method="ClustalW", type="dna", order="input")
saveRDS(mult, "mult.rds")
   
#Phylogenetic tree
#Construct the phylogenetic tree package phangorn
phang.align <- as.phyDat(mult, type="DNA", names=getSequence(seqtab))
dm <- dist.ml(phang.align)
treeNJ <- NJ(dm) # Note, tip order != sequence order
fit = pml(treeNJ, data=phang.align)

## negative edges length changed to 0!
fitGTR <- update(fit, k=4, inv=0.2)
fitGTR <- optim.pml(fitGTR, model="GTR", optInv=TRUE, optGamma=TRUE,
                    rearrangement = "stochastic", control = pml.control(trace = 0))
saveRDS(fitGTR, "fitGTR.rds")

# Construction of the phyloseq object
#read metadata
metadata <-read_excel("~/Work space/My data/metagenomics_analysis-Germany/16S paper.xlsx")
seqtab.nochim <- read_rds('~/Work space/My data/metagenomics_analysis-Germany/seqtab_nochim.Rds')

samples.out <- rownames(seqtab.nochim)
samdf <- metadata
rownames(samdf) <- samples.out
samdf <- cbind(samdf, metadata)
rownames(samdf) <- samples.out
samdf <- samdf[!duplicated(samdf$SampleID),] # Remove dupicate entries for reverse reads

#The pyloseq object ps
ps <- phyloseq(otu_table(seqtab_nochim, taxa_are_rows=FALSE), 
               sample_data(samdf),
               tax_table(taxa_species),
               phy_tree(fitGTR$tree))
sample_names (ps)

#Removing healthy samples that have a big abundance of gardnarella +Mock +NTC
ps <- prune_samples(  sample_names(ps) != "22Apr5828-DL083" &
                        sample_names(ps) != "22Apr5828-DL087" &
                        sample_names(ps) != "22Apr5828-DL088" &
                        sample_names(ps) != "22Apr5828-DL089" &
                        sample_names(ps) != "22Apr5828-DL102"&
                        sample_names(ps) != "22Apr5828-DL095"&
                        sample_names(ps) != "22Apr5828-DL096", ps)
ps
saveRDS(ps, "ps.rds")

# Create table, number of features for each phyla
table(tax_table(ps)[, "Phylum"], exclude = NULL)

#Exclude uncharacyerized 
ps <- subset_taxa(ps, !is.na(Phylum) & !Phylum %in% c("", "uncharacterized"))
table(tax_table(ps)[, "Phylum"], exclude = NULL)

#Identification cervical community state types (CSTs) 
#Hierarchical clustering of the taxonomic profiles using Bray-Curtis distances and ward linkage was first employed to define the vaginal (ravel et al)
#computing the Bray-Curtis "distance" (or dissimilarity)
# compute distances

dist <-  phyloseq::distance(ps, method="bray")
dist <-  phyloseq::distance(Lactobacillus, method="bray")

# Determine the optimal number of clusters
res <- NbClust(diss = dist, distance = NULL, method = "ward.D2",
               index = "silhouette")
res$Best.nc

# Decide on clusters: choose 6 cluster
cutree(hc, k = 6)
my_cut <- cutree(hc, k = 6)

# number of observations in each cluster
table(my_cut)

# make a table for each observation, of label and cluster
data <- data.frame(label = hc$labels,
           clust = my_cut)

# Making colors for 6 clusters
col_val_map <- met.brewer("Hokusai1", 6) %>%
  as.list() %>% setNames(paste0("clust_",seq(6)))

#Plot dendogramme
dend <- color_branches(dendro, k=6, col=unlist(col_val_map))
plot(dend)

#Adding new column (CSTs) to metadata in phyloseq object
sam.new <- data.frame(New_var = sample(CSTs, size = nsamples(ps), replace = TRUE))

# Mix up the sample names (just for demonstration purposes)
rownames(sam.new) <- sample(sample_names(ps))

# Turn into `sample_data` 
sam.new <- sample_data(sam.new)
head(sam.new)

ps <- merge_phyloseq(ps, sam.new)
head(sample_data(ps))
saveRDS(ps, "ps_CST.rds")

#Abundance plots
# Figure1: Bacterial phyla and genus relative abundance. The figure shows bar charts of the relative abundance of the most relevant bacterial phyla in the 4 categories. 
#Healthy, HPV, CT: Chlamydia trachomatis, and HPV/CT coinfected group. Phyla and genre are identified by colors as indicated. Numbers are absolute abundance 
ps<-ps_CST

#Agglomerate taxa
ps_genus<- phyloseq::tax_glom(ps, "Genus")

#We filter genus that are usually contaminants
# Define genre to filter
filterGenus = c("Allorhizobium-Neorhizobium-Pararhizobium-Rhizobium", "Variovorax")

# Filter entries
ps_genus = subset_taxa(ps_genus, !Genus %in% filterGenus)
ps_genus

# Sort by top 10 genus
top10P.genus = sort(tapply(taxa_sums(ps_genus), tax_table(ps_genus)[, "Genus"], sum), TRUE)[1:10]
top10P = subset_taxa(ps_genus, Genus %in% names(top10P.genus))

#Plot
plot_bar(top10P , x="Group", fill="Genus",facet_grid = ~Phylum) +
  geom_bar(aes(color=Genus, fill=Genus), stat="identity", position="stack")

##Figure2:  Bar plot of the relative abundance of the top 10 dominant species in each community state type (CST).
 phy <- normalize(ps_genus, method = "rarefy")
  plotbar(phy,level="Genus", group="New_var",
         color = met.brewer("Troy", 10),
         top = 10,
         fontsize.x = 10,
         fontsize.y = 12)
         
##Figure 4: heatmap
ps1 <- tax_glom(ps,taxrank = "Species")
heat.sample <- plot_taxa_heatmap(ps1, subset.top = 30,
                                 Variable = c("New_var", "Group"),
                                 heatcolors = met.brewer("Troy",30),
                                 transformation = "compositional")
#Figure supplementary file
#Lactobacillus species relative abundance 
#subset phyloseq object to include only genus Lactobacillus
Lactobacillus = subset_taxa(ps, Genus == "Lactobacillus")
phy <- normalize(Lactobacillus, method = "rarefy")

#by group
plotbar(phy,level="Species", group="Group",
        color = met.brewer("Troy", 5),
        top = 5,
        fontsize.x = 10,
        fontsize.y = 12)
#by CST
plotbar(phy,level="Species", group="New_var",
        color = met.brewer("Troy", 5),
        top = 5,
        fontsize.x = 10,
        fontsize.y = 12)
#Diversity analysis
##Alpha diversity (package microbial)

 #Figure 3
 plotalpha(ps, 
           group = "New_var",
           method = c("Observed", "Simpson", "Shannon", "Chao1"),
           color = met.brewer("Troy",6))
#Figure 5:
 plotalpha(ps, 
           group = "Group",
           method = c("Observed", "Simpson", "Shannon", "Chao1"),
           color = met.brewer("Troy",4))
 #Figure 6:
##Alpha diversity box plot with p values
a_my_comparisons <- list( c("Normale","Anormale" ))
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns"))

#we can rarefy in order to bring the samples to the same depth
# rarefy without replacement
ps.rarefied <- rarefy_even_depth(ps, rngseed=1, sample.size=0.9*min(sample_sums(ps)), replace=F)

#Plot
plot_richness(ps.rarefied, x="Cytologie", measures=c("Shannon", "Simpson", "Chao1", "Observed"), color = "Group")+
  geom_boxplot(alpha=0.6)+ 
  theme(legend.position="right", axis.text.x=element_text(angle=45,hjust=1,vjust=1,size=12))+
  stat_compare_means(method = "t.test", comparisons = a_my_comparisons, label = "p.signif", symnum.args = symnum.args)+
  scale_color_manual(values=met.brewer("Troy", 4))

##Beta diversity (library(vegan))
metadata <- data.frame(sample_data(ps.rarefied))
#Generate distances
ord_unifrac <- ordinate(ps.rarefied, method = "PCoA", distance = "wunifrac") 
ord_unifrac_un <- ordinate(ps.rarefied, method = "PCoA", distance = "unifrac")   

# Figure : Plot ordinations
a <- plot_ordination(ps.rarefied, ord_unifrac, color = "Group") + geom_point(size = 2)+scale_color_manual(values =met.brewer("Troy",5) )
b <- plot_ordination(ps.rarefied, ord_unifrac_un, color = "Group") + geom_point(size = 2)+scale_color_manual(values =met.brewer("Troy",5) )
cowplot::plot_grid(a, b, nrow = 1, ncol = 2, scale = .9, labels = c("Weighted", "Unweighted"))

#Compute distance
a<- phyloseq::distance(ps, "uunifrac", type= "Group") # Unweighted UniFrac
b<- phyloseq::distance(ps, "wunifrac", type = "Group") # weighted UniFrac
c<- phyloseq::distance(ps, "bray", type = "samples") #Bray

#Adonis
# Unweighted UniFrac
test.adonis_a <- adonis(a ~ Group, data = metadata)
test.adonis_a <- as.data.frame(test.adonis_a$aov.tab)
test.adonis_a

# weighted UniFrac
test.adonis_b <- adonis(b ~ Group, data = metadata)
test.adonis_b <- as.data.frame(test.adonis_b$aov.tab)
test.adonis_b

#Bray
test.adonis_c <- adonis(c ~ Group, data = metadata)
test.adonis_c <- as.data.frame(test.adonis_c$aov.tab)
test.adonis_c

#pairwise adonis
dist = phyloseq::distance(ps.rarefied, method="bray")
test.adonis <- adonis(dist ~ Group, data = metadata)
test.adonis <- as.data.frame(test.adonis$aov.tab)
test.adonis

cbn <- combn(x=unique(metadata$Group), m = 2)
p <- c()

for(i in 1:ncol(cbn)){
  ps.subs <- subset_samples(ps.rarefied, Group %in% cbn[,i])
  metadata_sub <- data.frame(sample_data(ps.subs))
  permanova_pairwise <- adonis(phyloseq::distance(ps.subs, method = "bray") ~ Group, data = metadata_sub)
  p <- c(p, permanova_pairwise$aov.tab$`Pr(>F)`[1])
}
p.adj <- p.adjust(p, method = "BH")
p.table <- cbind.data.frame(t(cbn), p=p, p.adj=p.adj)
p.table
# Same code for weighted and unweighted distance we just specify the method the we save each table
write.csv(p.table, "pairewise adonis dist bray.csv")
write.csv(p.table, "pairewise adonis dist unweighted.csv")
write.csv(p.table, "pairewise adonis dist weighted.csv")

##Differential abundance analysis 



